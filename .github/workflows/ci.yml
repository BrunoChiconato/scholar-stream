name: CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    name: Lint, SQL dry-run, Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            requirements-ci.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt

      - name: Ruff check
        run: ruff check .

      - name: Validate SQL order (dry-run)
        env:
          PYTHONPATH: .
        run: python sql/apply.py --dry-run

      - name: Pytest (with coverage)
        env:
          PYTHONPATH: .
        run: pytest -q --cov=ingestion --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

  changes:
    name: Detect infra changes
    runs-on: ubuntu-latest
    outputs:
      infra_changed: ${{ steps.filter.outputs.infra }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            infra:
              - 'infra/**'
              - '.github/workflows/terraform*.yml'  # alterar o workflow tambÃ©m conta

  tf-plan:
    name: Terraform plan (plan-only)
    runs-on: ubuntu-latest
    needs: [lint-test, changes]
    if: needs.lint-test.result == 'success' && needs.changes.outputs.infra_changed == 'true'
    env:
      TF_IN_AUTOMATION: "true"
      TF_WORKSPACE: "dev"
      AWS_ACCESS_KEY_ID: CI_DUMMY_KEY
      AWS_SECRET_ACCESS_KEY: CI_DUMMY_SECRET
      AWS_SESSION_TOKEN: CI_DUMMY_TOKEN
      AWS_EC2_METADATA_DISABLED: "true"
      AWS_REGION: ${{ vars.AWS_REGION }}
      SECRET_ARN: ${{ vars.SECRET_ARN }}
      FIREHOSE_NAME: ${{ vars.FIREHOSE_NAME }}
      SNOWFLAKE_ACCOUNT_URL: ${{ vars.SNOWFLAKE_ACCOUNT_URL }}
      FIREHOSE_SNOWFLAKE_USER: ${{ vars.FIREHOSE_SNOWFLAKE_USER }}
      SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA_RAW: ${{ vars.SNOWFLAKE_SCHEMA_RAW }}
      SNOWFLAKE_TABLE: ${{ vars.SNOWFLAKE_TABLE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform -chdir=infra init -input=false

      - name: Select/Create workspace
        run: |
          WS="${TF_WORKSPACE:-dev}"
          unset TF_WORKSPACE
          terraform -chdir=infra workspace list >/dev/null 2>&1 || terraform -chdir=infra init -input=false
          terraform -chdir=infra workspace select "$WS" || terraform -chdir=infra workspace new "$WS"

      - name: Terraform validate
        run: terraform -chdir=infra validate

      - name: Terraform plan (no-cred, offline)
        run: |
          terraform -chdir=infra plan -no-color -out=tfplan.bin \
            -var="aws_region=${{ vars.AWS_REGION }}" \
            -var="snowflake_account_url=${{ vars.SNOWFLAKE_ACCOUNT_URL }}" \
            -var="snowflake_user=${{ vars.FIREHOSE_SNOWFLAKE_USER }}" \
            -var="snowflake_database=${{ vars.SNOWFLAKE_DATABASE }}" \
            -var="snowflake_schema=${{ vars.SNOWFLAKE_SCHEMA_RAW }}" \
            -var="snowflake_table=${{ vars.SNOWFLAKE_TABLE }}" \
            -var="secret_arn=${{ vars.SECRET_ARN }}" \
            -var="offline_mode=true" \
            -refresh=false

      - name: Plan summary + artifacts
        run: |
          terraform -chdir=infra show -no-color tfplan.bin > infra/tfplan.txt
          terraform -chdir=infra show -json tfplan.bin > infra/tfplan.json
          echo "### Terraform plan (preview)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```hcl' >> $GITHUB_STEP_SUMMARY
          head -n 200 infra/tfplan.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ github.run_id }}
          path: |
            infra/tfplan.bin
            infra/tfplan.txt
            infra/tfplan.json
          retention-days: 7